@using APP.Business.Services.Models;
@using APP.Business.Services;
@inject ICommentService _commentService;


<Comment Avatar="@(@"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png")" Content="@(GetEditor(comment))"></Comment>
@CommentContent(comments)





@code {
    [Parameter]
    public string OwnerId { get; set; }
    private List<CommentModel> comments = new List<CommentModel>();
    private CommentModel comment = new CommentModel();
    private string replyId;
    private CommentModel replyComment = new CommentModel();

    protected override async Task OnInitializedAsync()
    {
        await GetComments();

    }

    private async Task GetComments()
    {
        comments = await _commentService.GetCommentsAsync(OwnerId, null);
    }

    private async Task SubmitComment(CommentModel comment, string pid)
    {
        comment.OwnerId = OwnerId;
        comment.ParentId = pid;
        var result = await _commentService.AddCommentAsync(comment);
        if (result)
        {
            replyId = default;
            await GetComments();
        }
    }

    private void ReplyComment(CommentModel comment)
    {
        replyComment = new CommentModel();
        replyId = comment.Id;
    }

    RenderFragment CommentContent(List<CommentModel> DataSource) =>
    @<div>
    @foreach (var item in DataSource)
    {
        <Comment Avatar="item.Author" Content="item.Content" Actions="@(new []{replyAction(item)})">
            @CommentContent(item.Comments)
        </Comment>
        @if (item.Id == replyId)
        {
            <Comment Avatar="@(@"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png")" Content="@(GetEditor(replyComment, item.Id))"></Comment>
        }
    }
</div>;

    RenderFragment replyAction(CommentModel comment) =>
    @<Template>
    <Button Type="@ButtonType.Link" @onclick="() => ReplyComment(comment)">回复</Button>
   

</Template>;

RenderFragment GetEditor(CommentModel model, string pid = null)
{
return
@<div>
    <TextArea Placeholder="一语中的" MinRows="3" MaxRows="5" @bind-Value="@model.Content"></TextArea>
    <br />
    <br />
    昵称：<Input Type="text" @bind-Value="@model.Author" style="width:30%" /> &emsp;
    邮箱：<Input type="email" @bind-Value="@model.Email" style="width:30%" />
    <Button Type="@ButtonType.Primary" HtmlType="submit" @onclick="() => SubmitComment(model, pid)">提交</Button>


    @*<Row Justify="space-around">
            <AntDesign.Col Span="22">
                <TextArea Placeholder="一语中的" MinRows="3" MaxRows="5" @bind-Value="@comment.Content"></TextArea>
            </AntDesign.Col>

        </Row>*@
</div>;
}
}
